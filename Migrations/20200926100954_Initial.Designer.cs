// <auto-generated />
using System;
using AutoSAAS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AutoSAAS.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200926100954_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AutoSAAS.models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name_ar")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name_en")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("AutoSAAS.models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Hq_city")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Hq_country")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Hq_phone")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Hq_phone_country_code")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name_ar")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name_en")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("AutoSAAS.models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("UserGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserGroupId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("AutoSAAS.models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("JobTitle")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("longblob");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("UserGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserGroupId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AutoSAAS.models.UserGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name_ar")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name_en")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("AutoSAAS.models.Value", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("AutoSAAS.models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("BrandIDId")
                        .HasColumnType("int");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Model")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("chasetNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("BrandIDId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("AutoSAAS.models.Permission", b =>
                {
                    b.HasOne("AutoSAAS.models.UserGroup", "userGroup")
                        .WithMany("Permissions")
                        .HasForeignKey("UserGroupId");
                });

            modelBuilder.Entity("AutoSAAS.models.User", b =>
                {
                    b.HasOne("AutoSAAS.models.Company", "Company")
                        .WithMany("users")
                        .HasForeignKey("CompanyId");

                    b.HasOne("AutoSAAS.models.UserGroup", "UserGroup")
                        .WithMany("users")
                        .HasForeignKey("UserGroupId");
                });

            modelBuilder.Entity("AutoSAAS.models.Vehicle", b =>
                {
                    b.HasOne("AutoSAAS.models.Brand", "Brand")
                        .WithMany("Vehicles")
                        .HasForeignKey("BrandIDId");
                });
#pragma warning restore 612, 618
        }
    }
}
